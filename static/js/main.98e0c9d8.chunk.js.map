{"version":3,"sources":["serviceWorker.js","utils/utils.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Background.js","components/Scroll.js","components/Pokedex.js","components/CardDetail.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","cache","pikCache","url","a","cachedJson","fetch","response","json","responseJson","fetchData","pokemonList","results","console","log","fetchPokemonData","name","pokemon","fetchPokemonEvolution","species","pokemonEvol","Card","props","state","this","setState","pokemonEvolution","showDetails","hasEvol","evolves_from_species","linkTo","phrase","flavor_text_entries","flavor_text","to","className","alt","src","sprites","front_default","id","types","map","item","key","slot","type","Component","CardList","list","SearchBox","searchfield","searchChange","onChange","placeholder","Backgorund","Scroll","children","Pokedex","onSearchChange","event","target","value","filteredPokemonName","filter","toLowerCase","includes","Background","CardDetail","params","App","path","exact","component","from","strict","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.98e0c9d8.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const cache = {};\r\n\r\nconst pikCache = async (url) => {\r\n  const cachedJson = cache[url];\r\n  if (cachedJson) {\r\n    return cachedJson;\r\n  }\r\n  const response = await fetch(url);\r\n  const responseJson = await response.json();\r\n  cache[url] = responseJson;\r\n  return responseJson;\r\n};\r\n\r\nexport const fetchData = async () => {\r\n  try {\r\n    const pokemonList = await pikCache(\r\n      \"https://pokeapi.co/api/v2/pokemon?limit=151&offset=0\"\r\n    );\r\n    return pokemonList.results;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchPokemonData = async (name) => {\r\n  try {\r\n    const pokemon = await pikCache(`https://pokeapi.co/api/v2/pokemon/${name}`);\r\n\r\n    return pokemon;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchPokemonEvolution = async (pokemon) => {\r\n  try {\r\n    const pokemonEvol = await pikCache(pokemon.species.url);\r\n\r\n    return pokemonEvol;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { fetchPokemonData, fetchPokemonEvolution } from \"../utils/utils\";\r\nimport \"./../App.css\";\r\n\r\nclass Card extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const pokemon = await fetchPokemonData(this.props.name);\r\n    const pokemonEvol = await fetchPokemonEvolution(pokemon);\r\n    this.setState({\r\n      pokemon: pokemon,\r\n      pokemonEvolution: pokemonEvol,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.pokemon) {\r\n      return <div></div>;\r\n    }\r\n    const { pokemon, pokemonEvolution } = this.state;\r\n    const { showDetails } = this.props;\r\n\r\n    const hasEvol = pokemonEvolution.evolves_from_species;\r\n    const linkTo = showDetails\r\n      ? \"/pokedex/\"\r\n      : `/pokedex/pokemon/${pokemon.name}`;\r\n\r\n    // el 26 es la entrada en espanol del juego pokemon x\r\n    //(Puede fallar si se cargan todos los pokemons de la api)\r\n    const phrase = pokemonEvolution.flavor_text_entries[26].flavor_text;\r\n\r\n    if (showDetails) {\r\n      return (\r\n        <Link to={linkTo}>\r\n          <div className=\"cardDetailContainer\">\r\n            <div>\r\n              <p className=\"pokePhrase\">{phrase}</p>\r\n            </div>\r\n            <div className=\"pokeIMGDetail\">\r\n              <img\r\n                alt=\"pokemon\"\r\n                className=\"pokeimg\"\r\n                src={pokemon.sprites.front_default}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"CardContentDetail\">\r\n              <div className=\"pokeIDDetail\">ID / {pokemon.id}</div>\r\n              <p className=\"pokeNameDetail\">{pokemon.name}</p>\r\n\r\n              <div className=\"pokeTypeContainerDetail\">\r\n                {pokemon.types.map((item) => (\r\n                  <div className=\"pokeType\" key={item.slot}>\r\n                    {item.type.name}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              <div>\r\n                {hasEvol ? (\r\n                  <div className=\"evolutionDetail\">\r\n                    Evoluciona de:\r\n                    <p className=\"evolPokemonDetail\">\r\n                      {pokemonEvolution.evolves_from_species.name}\r\n                    </p>\r\n                  </div>\r\n                ) : (\r\n                  <div></div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Link>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Link to={linkTo} className=\"card\">\r\n        <div className=\"cardHeader\">\r\n          <img\r\n            className=\"pokeIMG\"\r\n            alt=\"pokemon\"\r\n            src={pokemon.sprites.front_default}\r\n          />\r\n          <div className=\"pokeID\">ID / {pokemon.id}</div>\r\n        </div>\r\n        <div className=\"CardContent\">\r\n          <p className=\"pokeName\">{pokemon.name}</p>\r\n\r\n          <div className=\"pokeTypeContainer\">\r\n            {pokemon.types.map((item) => (\r\n              <div className=\"pokeType\" key={item.slot}>\r\n                {item.type.name}\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className=\"verticalLine\">\r\n            {hasEvol ? (\r\n              <div className=\"evolution\">\r\n                Evoluciona de:\r\n                <p className=\"evolPokemon\">\r\n                  {pokemonEvolution.evolves_from_species.name}\r\n                </p>\r\n              </div>\r\n            ) : (\r\n              <div></div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </Link>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"./Card\";\r\nimport \"./../App.css\";\r\n\r\nfunction CardList({ list }) {\r\n  return (\r\n    <div className=\"cardContainer\">\r\n      {list.map((item) => (\r\n        <Card key={item.name} name={item.name} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardList;\r\n","import React from \"react\";\r\nimport \"./../App.css\";\r\n\r\nfunction SearchBox({searchfield, searchChange}) {\r\n  return (\r\n    <div className=\"searchContainer\">\r\n      <input onChange={searchChange} className=\"searchInput\" type=\"search\" placeholder=\"Filtra pokemons por nombre...\"/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\nimport \"./../App.css\";\r\n\r\nfunction Backgorund() {\r\n  return (\r\n    <div className=\"containerBack\">\r\n      <div className=\"topContainer\">\r\n        <div className=\"blackSquareLeftTop\"></div>\r\n        <div className=\"blackSquareRightTop\"></div>\r\n      </div>\r\n      <div className=\"bottomContainer\">\r\n        <div className=\"redSemicircleLeftBottom\"></div>\r\n        <div className=\"redSemicircleRightBottom\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Backgorund;\r\n","import React from \"react\";\r\nimport \"./../App.css\";\r\n\r\nfunction Scroll(props) {\r\n  return (\r\n    <div className=\"scrollContainer\">\r\n      <div className=\"scrollable\">{props.children}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Scroll;\r\n","import React, { Component } from \"react\";\r\nimport CardList from \"./CardList\";\r\nimport SearchBox from \"./SearchBox\";\r\nimport Background from \"./Background\";\r\nimport Scroll from \"./Scroll\";\r\nimport { fetchData } from \"../utils/utils\";\r\nimport \"./../App.css\";\r\n\r\nclass Pokedex extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pokemonList: [],\r\n      searchfield: \"\",\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const list = await fetchData();\r\n    this.setState({\r\n      pokemonList: list,\r\n    });\r\n  }\r\n\r\n  onSearchChange = (event) => {\r\n    this.setState({ searchfield: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const filteredPokemonName = this.state.pokemonList.filter((pokemon) => {\r\n      return pokemon.name\r\n        .toLowerCase()\r\n        .includes(this.state.searchfield.toLowerCase());\r\n    });\r\n\r\n    return (\r\n      <div className=\"app\">\r\n        <Background />\r\n        <div className=\"container\">\r\n          <SearchBox searchChange={this.onSearchChange} />\r\n          <Scroll>\r\n            <CardList list={filteredPokemonName} />\r\n          </Scroll>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Pokedex;\r\n","import React, { Component } from \"react\";\r\nimport Background from \"./Background\";\r\nimport \"./../App.css\";\r\nimport Card from \"./Card\";\r\n\r\nclass CardDetail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    const { name } = this.props.match.params;\r\n    return (\r\n      <div className=\"app\">\r\n        <Background />\r\n        <Card name={name} showDetails />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CardDetail;\r\n","import React, { Component } from \"react\";\r\nimport Pokedex from \"./components/Pokedex\";\r\nimport CardDetail from \"./components/CardDetail\";\r\nimport \"./App.css\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/pokedex/\" exact component={Pokedex} />\r\n          <Route path=\"/pokedex/pokemon/:name\" exact component={CardDetail} />\r\n          <Redirect from=\"/\" to=\"/pokedex/\" strict/>\r\n        </Switch>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}